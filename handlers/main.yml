---
- name: Iptables IPv4 reset
  when: iptables_rules_reload_if_changed
  block:
    - name: Set the iptables policy for the filter:INPUT chain to ACCEPT
      ansible.builtin.iptables:
        table: filter
        chain: INPUT
        policy: ACCEPT
      listen: Reload iptables rules and restart services

    - name: Set the iptables policy for the filter:FORWARD chain to ACCEPT
      ansible.builtin.iptables:
        table: filter
        chain: FORWARD
        policy: ACCEPT
      listen: Reload iptables rules and restart services

    - name: Set the iptables policy for the filter:OUTPUT chain to ACCEPT
      ansible.builtin.iptables:
        table: filter
        chain: OUTPUT
        policy: ACCEPT
      listen: Reload iptables rules and restart services

    - name: Iptables flush nat table
      ansible.builtin.iptables:
        table: nat
        flush: true
      listen: Reload iptables rules and restart services

    - name: Iptables flush filter table
      ansible.builtin.iptables:
        table: filter
        flush: true
      listen: Reload iptables rules and restart services

- name: Iptables IPv6 reset
  when: iptables_rules_reload_if_changed
  block:
    - name: Set the iptables IPv6 policy for the filter:INPUT chain to ACCEPT
      ansible.builtin.iptables:
        ip_version: ipv6
        table: filter
        chain: INPUT
        policy: ACCEPT
      listen: Reload iptables rules and restart services

    - name: Set the iptables IPv6 policy for the filter:FORWARD chain to ACCEPT
      ansible.builtin.iptables:
        ip_version: ipv6
        table: filter
        chain: FORWARD
        policy: ACCEPT
      listen: Reload iptables rules and restart services

    - name: Set the iptables IPv6 policy for the filter:OUTPUT chain to ACCEPT
      ansible.builtin.iptables:
        ip_version: ipv6
        table: filter
        chain: OUTPUT
        policy: ACCEPT
      listen: Reload iptables rules and restart services

    - name: Iptables flush IPv6 nat table
      ansible.builtin.iptables:
        ip_version: ipv6
        table: nat
        flush: true
      listen: Reload iptables rules and restart services

    - name: Iptables flush IPv6 filter table
      ansible.builtin.iptables:
        ip_version: ipv6
        table: filter
        flush: true
      listen: Reload iptables rules and restart services

- name: Restart netfilter-persistent service
  ansible.builtin.service:
    name: netfilter-persistent
    state: restarted
  listen: Reload iptables rules and restart services
  when: iptables_rules_reload_if_changed

- name: Restart other services
  ansible.builtin.service:
    name: "{{ item }}"
    state: restarted
  loop: "{{ iptables_rules_restart_services }}"
  listen: Reload iptables rules and restart services
